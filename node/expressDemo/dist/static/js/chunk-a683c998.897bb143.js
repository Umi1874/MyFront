(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-a683c998"],{"062d":function(e,a,t){},bdcb:function(e,a,t){"use strict";var r=t("062d"),o=t.n(r);o.a},e28c:function(e,a,t){"use strict";t.r(a);var r=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",[t("div",{staticClass:"formbody"},[t("el-form",{ref:"formData",staticClass:"demo-ruleForm",attrs:{model:e.formData,rules:e.formRules,"label-width":"200px","label-position":"right","status-icon":""}},[t("el-row",{attrs:{gutter:100,type:"flex"}},[t("el-col",{staticStyle:{"border-right":"2px dashed #ccc"},attrs:{span:11}},[t("h2",[e._v("I want to...")]),e._v(" "),t("el-form-item",{attrs:{"label-width":"0",prop:"MoveInComments"}},[e.isEnergised?t("el-radio",{attrs:{label:e.TransferType.Transfer,border:"",id:"radTransferTypeTransfer"},on:{change:function(a){return e.update("Action",a)}},model:{value:e.formData.Action,callback:function(a){e.$set(e.formData,"Action",a)},expression:"formData.Action"}},[e._v("Switch to GloBird\n              at my current address\n            ")]):e._e(),e._v(" "),t("el-radio",{attrs:{label:e.TransferType.MoveIn,border:"",id:"radTransferTypeMovein"},on:{change:function(a){return e.update("Action",a)}},model:{value:e.formData.Action,callback:function(a){e.$set(e.formData,"Action",a)},expression:"formData.Action"}},[e._v("Get\n              connected at a\n              new address")]),e._v(" "),t("el-tooltip",{attrs:{placement:"right",effect:"light"}},[t("div",{attrs:{slot:"content"},slot:"content"},[e._v("\n                IMPORTANT!\n                "),t("br"),e._v("Requests to connect the power\n                "),t("br"),e._v("at a new address must be submitted\n                "),t("br"),e._v("by 1PM for next business dayservices.\n                "),"NSW"!=this.selectedState?t("div",[t("br"),e._v("If you need power SAME DAY\n                  "),t("br"),e._v("PLEASE CALL US.\n                ")]):e._e()]),e._v(" "),t("i",{staticClass:"el-icon-warning"})])],1),e._v(" "),t("el-divider"),e._v(" "),e.formData.Action==e.TransferType.MoveIn?t("div",[t("el-form-item",{attrs:{label:"Move in date",prop:"ElectricityMoveInDate"}},[t("el-date-picker",{directives:[{name:"loading",rawName:"v-loading",value:e.loadHoliday,expression:"loadHoliday"}],ref:"ElectricityMoveInDate",attrs:{placeholder:"","picker-options":e.validator_MOVEINDATE,id:"datepkMoveinDate"},on:{change:function(a){e.update("ElectricityMoveInDate",e.formAUSDateString(a)),e.update("GasMoveInDate",e.formAUSDateString(a))}},model:{value:e.formData.ElectricityMoveInDate,callback:function(a){e.$set(e.formData,"ElectricityMoveInDate",a)},expression:"formData.ElectricityMoveInDate"}})],1),e._v(" "),e.formData.showPreviousAddress?t("div",[t("h3",{staticStyle:{"margin-left":"200px","margin-bottom":"20px"}},[e._v("Current Address"),t("span",{staticStyle:{"font-size":"14px","font-weight":"lighter"}},[e._v("(Your address before Move-In)")])]),e._v(" "),t("el-form-item",{attrs:{label:"Country",prop:"PreviousAddress.Country"}},[t("el-select",{ref:"PreviousAddress.Country",attrs:{placeholder:"",id:"selPreviousAddressCountry"},on:{change:function(a){return e.update(["PreviousAddress","Country"],a)}},model:{value:e.formData.PreviousAddress.Country,callback:function(a){e.$set(e.formData.PreviousAddress,"Country",a)},expression:"formData.PreviousAddress.Country"}},e._l(e.countryList,(function(e,a){return t("el-option",{key:a,attrs:{label:e,value:e}})})),1)],1),e._v(" "),t("el-form-item",{attrs:{label:"Street Number and Name",prop:"PreviousAddress.StreetName"}},[t("el-input",{ref:"PreviousAddress.StreetName",attrs:{id:"inpPreviousAddressStreetName"},on:{change:function(a){return e.update(["PreviousAddress","StreetName"],a)}},model:{value:e.formData.PreviousAddress.StreetName,callback:function(a){e.$set(e.formData.PreviousAddress,"StreetName",a)},expression:"formData.PreviousAddress.StreetName"}})],1),e._v(" "),t("el-form-item",{attrs:{label:"Suburb",prop:"PreviousAddress.SuburbOrPlaceOrLocality"}},[t("el-input",{ref:"PreviousAddress.SuburbOrPlaceOrLocality",attrs:{id:"inpPreviousAddressSuburbOrPlaceOrLocality"},on:{change:function(a){return e.update(["PreviousAddress","SuburbOrPlaceOrLocality"],a)}},model:{value:e.formData.PreviousAddress.SuburbOrPlaceOrLocality,callback:function(a){e.$set(e.formData.PreviousAddress,"SuburbOrPlaceOrLocality",a)},expression:"formData.PreviousAddress.SuburbOrPlaceOrLocality"}})],1),e._v(" "),t("el-form-item",{attrs:{label:"State",prop:"PreviousAddress.StateOrTerritory"}},["Australia"==e.formData.PreviousAddress.Country?t("el-select",{ref:"PreviousAddress.StateOrTerritory",attrs:{id:"selPreviousAddressStateOrTerritory",placeholder:""},on:{change:function(a){return e.update(["PreviousAddress","StateOrTerritory"],a)}},model:{value:e.formData.PreviousAddress.StateOrTerritory,callback:function(a){e.$set(e.formData.PreviousAddress,"StateOrTerritory",a)},expression:"formData.PreviousAddress.StateOrTerritory"}},e._l(e.states,(function(e,a){return t("el-option",{key:a,attrs:{label:e,value:e}})})),1):t("el-input",{ref:"PreviousAddress.StateOrTerritory",attrs:{id:"inpPreviousAddressStateOrTerritory"},on:{change:function(a){return e.update(["PreviousAddress","StateOrTerritory"],a)}},model:{value:e.formData.PreviousAddress.StateOrTerritory,callback:function(a){e.$set(e.formData.PreviousAddress,"StateOrTerritory",a)},expression:"formData.PreviousAddress.StateOrTerritory"}})],1),e._v(" "),t("el-form-item",{attrs:{label:"Postcode",prop:"PreviousAddress.Postcode"}},[t("el-input",{ref:"PreviousAddress.Postcode",attrs:{type:"number",id:"inpPreviousAddressPostcode"},on:{change:function(a){return e.update(["PreviousAddress","Postcode"],a)}},model:{value:e.formData.PreviousAddress.Postcode,callback:function(a){e.$set(e.formData.PreviousAddress,"Postcode",e._n(a))},expression:"formData.PreviousAddress.Postcode"}})],1)],1):e._e()],1):e._e(),e._v(" "),t("el-form-item",{attrs:{label:"Additional Instructions",prop:"MoveInComments"}},[t("el-input",{attrs:{type:"textarea",rows:6,placeholder:"",id:"inpMoveInComments"},on:{change:function(a){return e.update("MoveInComments",a)}},model:{value:e.formData.MoveInComments,callback:function(a){e.$set(e.formData,"MoveInComments",a)},expression:"formData.MoveInComments"}})],1),e._v(" "),e.showGasAccessInstructionInput?t("el-form-item",{attrs:{label:"Gas Meter Access Instructions",prop:"GasMeterAccessInstructions"}},[t("el-input",{attrs:{type:"textarea",rows:6,placeholder:"",id:"inpGasMeterAccessInstructions"},on:{change:function(a){return e.update("GasMeterAccessInstructions",a)}},model:{value:e.formData.GasMeterAccessInstructions,callback:function(a){e.$set(e.formData,"GasMeterAccessInstructions",a)},expression:"formData.GasMeterAccessInstructions"}})],1):e._e()],1),e._v(" "),t("el-col",{attrs:{span:11}},[t("h2",[e._v("Special Requirements")]),e._v(" "),t("el-form-item",{attrs:{label:"My property has Life Support equipment"}},[t("el-radio-group",{staticStyle:{"margin-top":"20px"},attrs:{id:"radSensitiveLoadType"},on:{change:function(a){return e.update("SensitiveLoadType",a)}},model:{value:e.formData.SensitiveLoadType,callback:function(a){e.$set(e.formData,"SensitiveLoadType",a)},expression:"formData.SensitiveLoadType"}},[t("el-radio",{attrs:{label:e.SensitiveLoadType.LifeSupport,border:""}},[e._v("YES")]),e._v(" "),t("el-radio",{attrs:{label:e.SensitiveLoadType.None,border:""}},[e._v("NO")])],1)],1),e._v(" "),e.hideConcession||e.useExistingAccount?e._e():t("el-form-item",{attrs:{label:"I have a Concession card"}},[t("el-radio-group",{attrs:{id:"radConcessionCard"},on:{change:function(a){return e.update("ConcessionCard",JSON.parse(a))}},model:{value:e.formData.ConcessionCard,callback:function(a){e.$set(e.formData,"ConcessionCard",a)},expression:"formData.ConcessionCard"}},[t("el-radio",{attrs:{label:"true",border:""}},[e._v("YES")]),e._v(" "),t("el-radio",{attrs:{label:"false",border:""}},[e._v("NO")])],1)],1),e._v(" "),t("el-divider"),e._v(" "),e.formData.SensitiveLoadType==e.SensitiveLoadType.LifeSupport?t("div",[t("el-alert",{attrs:{title:"IMPORTANT INFOMATION",type:"error",effect:"dark",description:"Unfortunately we cannot complete your signup online.\n            Please contact us on 133 456 during business hours to arrange lodgement of the appropriate assisting documents."},on:{close:function(a){return e.closeWarn()}}})],1):e._e(),e._v(" "),"true"!=e.formData.ConcessionCard||e.hideConcession||e.useExistingAccount?e._e():t("div",[t("h2",[e._v("Concession card details")]),e._v(" "),t("el-form-item",{attrs:{label:"Card Type",prop:"ConcessionCardType"}},[t("el-select",{directives:[{name:"loading",rawName:"v-loading",value:e.loadConcessionCard,expression:"loadConcessionCard"}],ref:"ConcessionCardType",attrs:{placeholder:"",id:"selConcessionCardType","value-key":"name"},on:{change:function(a){return e.update("ConcessionCardType",Object.assign({},a))}},model:{value:e.formData.ConcessionCardType,callback:function(a){e.$set(e.formData,"ConcessionCardType",a)},expression:"formData.ConcessionCardType"}},e._l(e.cardType,(function(e,a){return t("el-option",{key:a,attrs:{label:e.name,value:e}})})),1)],1),e._v(" "),t("el-form-item",{attrs:{label:"Card Number",prop:"ConcessionCardNumber"}},[t("el-input",{ref:"ConcessionCardNumber",attrs:{id:"inpConcessionCardNumber"},on:{change:function(a){return e.update("ConcessionCardNumber",a)}},model:{value:e.formData.ConcessionCardNumber,callback:function(a){e.$set(e.formData,"ConcessionCardNumber",a)},expression:"formData.ConcessionCardNumber"}})],1),e._v(" "),t("el-form-item",{attrs:{label:"Name On Card",prop:"ConcessionCardName"}},[t("el-input",{ref:"ConcessionCardName",attrs:{id:"inpConcessionCardName"},on:{change:function(a){return e.update("ConcessionCardName",a)}},model:{value:e.formData.ConcessionCardName,callback:function(a){e.$set(e.formData,"ConcessionCardName",a)},expression:"formData.ConcessionCardName"}})],1),e._v(" "),t("el-form-item",{attrs:{label:"Start-End Date",prop:"ConcessionDate"}},[t("el-date-picker",{ref:"ConcessionDate",attrs:{placeholder:"",type:"daterange","start-placeholder":"Start Date","end-placeholder":"End Date",id:"datepkConcessionDate"},on:{change:function(a){e.update("ConcessionStartDate",e.formAUSDateString(a[0])),e.update("ConcessionEndDate",e.formAUSDateString(a[1]))}},model:{value:e.formData.ConcessionDate,callback:function(a){e.$set(e.formData,"ConcessionDate",a)},expression:"formData.ConcessionDate"}})],1)],1),e._v(" "),t("el-form-item",{staticStyle:{"margin-top":"40px"}},[t("el-button",{attrs:{type:"primary",id:"btnAdditionalInfoPrevious"},on:{click:e.previous}},[t("strong",[t("i",[e._v("PREVIOUS")])])]),e._v(" "),t("el-button",{attrs:{type:"primary",disabled:e.formData.SensitiveLoadType==e.SensitiveLoadType.LifeSupport,id:"btnAdditionalInfoNext"},on:{click:function(a){return e.next("formData")}}},[t("strong",[t("i",[e._v("CONTINUE")])])])],1)],1)],1)],1)],1)])},o=[],s=t("75fc"),n=t("bd86"),i=(t("6b54"),t("2798")),d=t("ecb5"),c=t("593d");function l(){return Object(c["a"])({url:"/Member/GetConcessionType",method:"get"})}var u=t("d0f4"),m=t("ee30"),p=t("9150"),f=t("a2d7"),v=t("37ca"),b=t("717c"),C=(t("bc3a"),m["a"].QuoteType),h="Please fill in this field",y={name:"Index",data:function(){var e;return{IdentityType:p["a"],QuoteType:C,AccountType:f["a"],TransferType:v["a"],SensitiveLoadType:b["a"],loadHoliday:!0,loadConcessionCard:!0,showGasAccessInstructionInput:!1,countryList:Object(d["a"])(),states:Object(d["b"])(),meterType:"",isEnergised:!0,cardType:[],selectedProductType:"",selectedState:"",useExistingAccount:!1,hideConcession:!1,formData:{Action:v["a"].Transfer,SensitiveLoadType:b["a"].None,ElectricityMoveInDate:"",GasMoveInDate:"",PreviousAddress:{Country:"Australia",StreetName:"",SuburbOrPlaceOrLocality:"",StateOrTerritory:"",Postcode:""},MoveInComments:"",GasMeterAccessInstructions:"",SpecialRequirementsComments:"",ConcessionCard:"false",ConcessionCardNumber:"",ConcessionCardName:"",ConcessionCardType:"",ConcessionStartDate:"",ConcessionEndDate:"",showPreviousAddress:!0,ConcessionDate:""},validator_MOVEINDATE:{},validOrder:["ElectricityMoveInDate","PreviousAddress.Country","PreviousAddress.StreetName","PreviousAddress.SuburbOrPlaceOrLocality","PreviousAddress.StateOrTerritory","PreviousAddress.Postcode","ConcessionCardType","ConcessionCardNumber","ConcessionCardName","ConcessionDate"],formRules:(e={},Object(n["a"])(e,"PreviousAddress.Country",[{required:!0,message:h,trigger:"blur"}]),Object(n["a"])(e,"PreviousAddress.StreetName",[{required:!0,message:h,trigger:"blur"}]),Object(n["a"])(e,"PreviousAddress.SuburbOrPlaceOrLocality",[{required:!0,message:h,trigger:"blur"}]),Object(n["a"])(e,"PreviousAddress.StateOrTerritory",[{required:!0,message:h,trigger:"change"}]),Object(n["a"])(e,"PreviousAddress.Postcode",[{required:!0,validator:function(e,a,t){a?a.toString().length<4?t(new Error("at least 4 numbers")):t():t(new Error(h))},trigger:"change"}]),Object(n["a"])(e,"ElectricityMoveInDate",[{type:"date",required:!0,message:h,trigger:"change"}]),Object(n["a"])(e,"MoveInComments",[{required:!1}]),Object(n["a"])(e,"GasMeterAccessInstructions",[{required:!1}]),Object(n["a"])(e,"ConcessionCardType",[{required:!0,message:h,trigger:"change"}]),Object(n["a"])(e,"ConcessionCardNumber",[{required:!0,message:h,trigger:"blur"}]),Object(n["a"])(e,"ConcessionDate",[{required:!0,validator:function(e,a,t){a[0]&&a[1]?t():t(new Error("Please input start-end date"))},trigger:"blur"}]),e)}},created:function(){var e=this;Object(i["f"])({success:function(a){e.loadHoliday=!1},error:function(a){console.log(a),e.loadHoliday=!1}}),Object(u["b"])(this.formData,this.$store.state.otherinfo.AdditionalInfo),this.formData["ConcessionCard"]?this.formData["ConcessionCard"]="true":this.formData["ConcessionCard"]="false",this.$store.state.otherinfo.AdditionalInfo["ElectricityMoveInDate"]&&(this.formData["ElectricityMoveInDate"]=new Date(this.$store.state.otherinfo.AdditionalInfo["ElectricityMoveInDate"])),this.$store.state.otherinfo.AdditionalInfo["ConcessionStartDate"]&&(this.formData["ConcessionDate"]=[new Date(this.$store.state.otherinfo.AdditionalInfo["ConcessionStartDate"]),new Date(this.$store.state.otherinfo.AdditionalInfo["ConcessionEndDate"])]);var a=this.$store.state.ViewModelLocatorService.ElectricityQuoteViewModel,t=this.$store.state.ViewModelLocatorService.GasQuoteViewModel,r=this.$store.state.ViewModelLocatorService.PersonalDetailsViewModel,o=r.firstName.toLowerCase(),n=r.lastName.toLowerCase(),d=r.preferredName.toLowerCase();this.formRules["ConcessionCardName"]=[{required:!0,validator:function(e,a,t){a?(a=a.toLowerCase(),-1!==a.indexOf(o)&&-1!==a.indexOf(n)?t():d.length>0&&-1!==a.indexOf(d)?t():t(new Error("Concession card holder's name must match account holder's name."))):t(new Error(h))},trigger:"change"}],a.show?(this.meterType=a.installationCodes,this.isEnergised=a.isEnergised):this.isEnergised=!0,this.isEnergised||(this.formData.Action=v["a"].MoveIn,this.update("Action",v["a"].MoveIn)),l().then((function(a){e.loadConcessionCard=!1,e.cardType=Object(s["a"])(a)})).catch((function(a){e.loadConcessionCard=!1})),a.select&&t.select?(this.selectedProductType=C.Dual,this.selectedState=a.getState()):a.select?(this.selectedProductType=C.Electricity,this.selectedState=a.getState()):(this.selectedProductType=C.Gas,this.selectedState=t.getState());var c=this.selectedState;this.showGasAccessInstructionInput=this.selectedProductType==C.Dual||this.selectedProductType==C.Gas;var m=this.$store.getters.dev,b=4,y=Object(i["c"])(Object(i["a"])(m,b,this.selectedProductType==C.Gas,c));this.validator_MOVEINDATE={disabledDate:function(e){var a=Object(i["c"])(e),t=Object(i["e"])(Object(i["d"])(a),c);return t||y>a}},this.useExistingAccount=r.useExistingAccount,r.accountType===f["a"].Business?this.hideConcession=!0:this.hideConcession=!1,r.identityType===p["a"].DriverLicense?this.formData.showPreviousAddress=!1:this.formData.showPreviousAddress=!0},methods:{formAUSDateString:i["b"],update:function(e,a){this.$store.commit("otherinfo/updateAdditionalInfo",{key:e,value:a})},next:function(e){var a=this;this.$refs[e].validate((function(e,t){if(!e){for(var r=0;r<a.validOrder.length;r++)if(t[a.validOrder[r]]){a.$refs[a.validOrder[r]].focus();break}return console.log("error submit!!"),!1}a.$router.push({name:"confirm",params:{}})}))},reset:function(e){this.$refs[e].resetFields()},previous:function(){this.$router.push({name:"personal details",params:{}})},closeWarn:function(){this.update("SensitiveLoadType",b["a"].None),this.formData.SensitiveLoadType=b["a"].None}}},S=y,A=(t("bdcb"),t("2877")),g=Object(A["a"])(S,r,o,!1,null,"d2230b04",null);a["default"]=g.exports},ecb5:function(e,a,t){"use strict";t.d(a,"a",(function(){return s})),t.d(a,"b",(function(){return n}));var r=["Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antigua &amp; Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bonaire","Bosnia &amp; Herzegovina","Botswana","Brazil","British Indian Ocean Ter","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Canary Islands","Cape Verde","Cayman Islands","Central African Republic","Chad","Channel Islands","Chile","China","Christmas Island","Cocos Island","Colombia","Comoros","Congo","Cook Islands","Costa Rica","Cote D'Ivoire","Croatia","Cuba","Curacao","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Ter","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Great Britain","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guinea","Guyana","Haiti","Hawaii","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea North","Korea South","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Macedonia","Madagascar","Malaysia","Malawi","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Midway Islands","Moldova","Monaco","Mongolia","Montserrat","Morocco","Mozambique","Myanmar","Nambia","Nauru","Nepal","Netherland Antilles","Netherlands (Holland, Europe)","Nevis","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","Norway","Oman","Pakistan","Palau Island","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn Island","Poland","Portugal","Puerto Rico","Qatar","Republic of Montenegro","Republic of Serbia","Reunion","Romania","Russia","Rwanda","St Barthelemy","St Eustatius","St Helena","St Kitts-Nevis","St Lucia","St Maarten","St Pierre &amp; Miquelon","St Vincent &amp; Grenadines","Saipan","Samoa","Samoa American","San Marino","Sao Tome &amp; Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","Spain","Sri Lanka","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Tahiti","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tokelau","Tonga","Trinidad &amp; Tobago","Tunisia","Turkey","Turkmenistan","Turks &amp; Caicos Is","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","Uruguay","Uzbekistan","Vanuatu","Vatican City State","Venezuela","Vietnam","Virgin Islands (Brit)","Virgin Islands (USA)","Wake Island","Wallis &amp; Futana Is","Yemen","Zaire","Zambia","Zimbabwe"],o=["ACT","NSW","NT","QLD","SA","TAS","WA","VIC"];function s(){return r}function n(){return o}}}]);